1.USMART是一个串口调试组件,可以大大提高代码体调试效率

2.USMART可以直接通过串口调用用户编写的函数,随意修改函数参数.

3.可以调用绝大部分用户直接编写的函数,他有一个类似注册表的东西.

你想要USMART管理那些函数,能够识别哪些函数,那么就把这个函数按照他要求的格式放到特定的地方.

函数通过串口发送过去,USMART解析到注册过的函数.

4.USMART占用资源少,(最小:4KB FLASH,72B SRAM)

5.支持参数类型很多,整数(10/16),字符串,函数指针等等,注意不支持浮点数!!!

6.支持函数返回值显示且可对格式进行设置

7.支持函数时间的计算

8.原理: 通过比对用户输入的字符串和本地函数名,用函数指针实现调用不同的函数.

9.用户输入字符串:一般是通过串口输入字符串，以\r\n结束

然后USMART解析并比对,解析字符串(函数名/参数),并对比本地函数名表

结果:要么 丢弃报错, 要么通过函数指针,输入参数并执行.

返回执行结果,最后返回执行结果,等待下次输入

10.一共七个文件.

usmart.c/h 核心文件,用于处理命令以及对外部交互
usmart_config.c 函数管理文件,用于添加用户需要USMART管理的函数
usmart_port.c/h 移植文件,用于USMART移植
usmart_str.c/h 字符串处理文件,用于字符串转换,参数读取等

11.修改usmart_port.c/h,即可完成移植
修改usmart_config.c,即可添加自己想要调用用的函数

12.USMART扫描函数,解析用户输入的字符串数据,进而实现函数调用和组件各个控制功能