1.cubeide对于STM32系列产品的兼容性比keil5 MDK更好.

2.程序全速运行时无法查看局部变量的值,和单片机寄存器值. 但单步可以.

3.需要在对应VScode中的文件添加宏定义和包含路径,在cubeide中位置是:项目->属性->C/C++常规->路径和符号,复制到VSCODE中对应的位置.

4.快捷键Ctrl + B 是全部文件编译,包括不同项目的,所及尽可能保证只有一个项目.
进入调试: F11 结束调试: Ctrl + F2
Alt + / : 代码提示
F3 : 跳转到定义处 
F5 : 跳进函数,  F6 : 单步运行, F7 : 跳出函数 , F8 : 全速运行
Ctrl + D 整行删除
Ctrl + Shift + '+' : 放大
Ctrl + Shift + '-' : 缩小
Alt + '<-' 或者 '->',进入前一个界面或者后一个

5.左侧文件中右键->属性->C/C++构建->设置->MCU/MPU Post build output,选择是否生成二进制或者六进制文件.

6.debug 编译结果包含调试信息,不做任何优化; release代码大小和运行速度上进行了优化.

7.介绍:

HAL库（Hardware Abstraction Layer，HAL）：
HAL库是ST引入的一个高级别的库，旨在提供硬件抽象层的功能。它为开发者提供了更高层次的接口，以便更容易地配置和控制微控制器的外设。

HAL库在功能上介于标准库和LL库之间，提供了更高级别的API，使开发者能够更快速地进行开发。
HAL库的接口相对较稳定，不同型号的ST微控制器可以使用相似的代码。

LL库（Low-Level Library，LL）：
LL库是ST引入的较低级别的库，它提供了更底层的控制和访问方式，类似于标准库。

LL库提供了对寄存器和外设的直接访问，但提供了更高级别的抽象和封装，以简化操作。
LL库在某些方面可能比HAL库更轻量级，适用于对代码尺寸和性能有更高要求的应用

8.memset需要引入一个头文件,增加了flash的使用.

9.现场表达式功能可以在程序全速运行时,查看变化的变量值

10.表达式可以看局部变量, 现场表达式只能看全局变量.

12.Debug H750要等进度条走完才可,慢得一批.