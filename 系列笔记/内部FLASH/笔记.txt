1.内部FLASH比外部FLASH块.存放数据

2.对于F103zet6

flash 起始地址0x0800 0000
结束地址 0x0807 ffff,分为256页,每页2k(小中容量为每页1k)
flash总大小512kb.

信息块:存储大小2kb,用来存储ST自带的启动程序,用来串口下载.
信息块地址:
系统存储器: 0x1fff f000 ~ 0x1fff f7ff 共2k字节

不同容量,页数和页大小不同.

选项字节寻址:0x1fff f800 ~ 0x1fff f80f共16字节.

3.CPU运行速度比FLASH快得多,STM32F103的FLASH最快访问速度小于等于24MHz,如果CPU主频超过这个频率就要加入等待周期.
24 < sysclk <48 MHz ,加入1个等待周期.
48 < sysclk <72 MHz ,加入2个等待周期.

4.正确设置好等待周期后,利用指针读取数据.
从地址addr,读取数据.
data =*(volatile u8 *)addr;
data =*(volatile u16 *)addr;
data =*(volatile u32 *)addr;

在进行写或者擦除操作时,不能进行代码或数据的读取操作.

5.内部闪存的写入.

解锁->擦除->写数据->上锁.

解锁:将两个特定的解锁序列号(KEY1:0x45670123,KEY2:0xcdef89ab)依次写入FLASH_KEYR

擦除:读出来发现全0xff就不用擦除,主要用页擦除.

写数据:擦除完成,可以向FLASH写数据,每次只能以16位方式写入.

上锁:写入数据完成后,需要设置FLASH_CR[LOCK]位置1,重新上锁,以防数据被不小心修改.

6.闪存擦除具体步骤.

读FLASH_CR的LOCK位.

如果是1,写入解锁序列;如果是0,设置FLASH_CR的PER(页擦除)位为1.

设置FLASH_AR指定擦除地址.

设置FLASH_CR的STRT位为1开始擦除.

然后一直查SR的busy位是不是1,等待忙.

7.闪存写入步骤.

读入CR的LOCK位,如果等于1,就写解锁序列.

设置CR的PG位为1;

指定地址处写入半字;

轮询busy位等于1.

8.内部FLASH构成(F4/f7/h7).

闪存模块子部分:主存储器,系统存储器,OPT区域,选项字节.

主存储器:用来存放代码和数据常数(const定义的).
系统存储区:用来存放bootloader代码,该代码在出厂时固化在内部,用户不能访问.
OPT区域:一次性可编程区域,分为两部分(F4:前512字节,后16字节)(F7:1056字节).

9.对于h7来说,在BANK1内部有2KB大小的用户选项字节,不过没有映射到内存地址上,可通过FLASH相关寄存器访问.

10.h743系列其中一个结构,2MB闪存.

bank1:扇区0~7+系统存储器.
bank2:扇区0~7+系统存储器.
每个扇区大小128K字节.

相比起来h750系列就很小了,128KB.

11.flash读写过程(F4/F7/H7)

准确读取FLASH数据需要设置等待周期数,根CPU时钟频率和器件电压相关.

自适应实时存储加速器(ART Accelerator),通过指令缓存存储器预取指令,实现相当于FLASH0等待周期.

有一个等待周期表,用的时候查.

h7有点复杂.

12.高级系列的闪存读取与F1系列一样.

13.高级系列闪存写入.

电源电压会影响操作的位数.

14.H7系列.

写入地址的首地址必须是32的倍数,写入数据长度必须是32字节的倍数.
不同系列可能有他的特殊要求,注意看手册.

h750vb只有一个扇区,擦除最小单位也是这个扇区....