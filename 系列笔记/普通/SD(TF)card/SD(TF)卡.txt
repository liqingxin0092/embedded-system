续纸质笔记:

1.有一些常用命令,见图片.

发送ACMD前要发送CMD55.

命令的参数具体是多少要查阅PDF

询问电压支持情况和SD卡容量是很重要.

一般情况下,写之前,SD卡自动检测是否需要擦除,需要就擦了.

有个命令是预先擦除,不用它SD卡也会自动擦除,这个命令是加速的.

2.SD卡响应.

SD卡和单片机的通信采用发送应答机制.

每发送一个命令,SD卡都会给出一个应答,以告知主机该命令的执行情况,或者返回主机需要获取的数据.使用SDIO接口时,响应通过CMD线传输.

SD卡响应因使用接口不同,格式也不同.响应具体由R1,R1b,R2,R3,R7.

响应内容大小可以分为48bit和136bit.

具体见图:响应.

3.不同命令响应可能一样,如何区分响应的是那条命令?
R1:[45:40]6位可区分,command index,具体见图.

4.R6响应,获取SD卡相对地址. SPI模式没有RCA寄存器,也不支持CMD3命令,没有R6响应.

续纸质:

1.SDIO适配器中各成分都有其细分,详细见手册.

控制单元:电源管理和时钟管理功能.

命令通道:控制命令发送并接收响应.命令通道状态机(SPSM).

数据通道状态机(DPSM).

数据FIFO:具有发送和接收数据缓冲器.

2.命令通道进入空闲至少8个SDIO_CK后,CPSM进入空闲状态.

(1).置位发送使能,写命令寄存器:命令开始发送.
(2).不需要响应,进入空闲状态.
(3).如果还需要响应,进入等待状态,启动命令定时器.响应时间超过64个SDIO_CK周期判定为超时,会置位超时标志,进入空闲状态.
(4).正常来说未超时的话,根据CRC设置状态寄存器.状态寄存器看手册.

DPSM(数据通道寄存器):
置位DCTRL的DTEN,启动书v就定时器;并根据数据方向跳转到Wait_R或者Wait_S.

Wait_R:在超时到来前接收到起始位,跳转到接收状态进行接收.超时就跳转到空闲状态.

SDIO发回来的数据有CRC.SDIO外设接收到数据也会计算CRC进行匹配,如果匹配失败,返回空闲状态.

Wait_S:等待FIFO寄存器非空(不是空的就一直处于发送状态),跳转到发送状态,发送完产生CRC和起始位.紧接着产生忙信号.

Busy:等待CRC状态标志位.如果CRC不匹配,置位错误标志,跳转至空闲.
CRC匹配:若DAT0非低电平就跳转到Wait_S.如果超时:置为标志跳转到空闲状态.

3.数据FIFO:包括32个字的数据缓冲,和发送与接收电路.

发送缓冲和接收缓冲各512bit.
通过TXACT和RXACT标识分别表明道歉处于发哦是那个还是接收状态,这两个标志位是互斥的.

发送FIFO:
SDIO发送数据时,由数据通道但能源置位TXACT,表示数据传输正在进行.
当TXACT位为一时,通过APB2接口(F4)将数据写入到发送FIFO.
发送FIFO相关状态:TXFIFOF(错误),TXFIFOE(满),TXFIFOHE(半满),TXDAVL(有数据),TXUNDERRUN(下溢,读空FIFO后继续往下读)
注意:可能不准确,详细见手册.

接收FIFO:
SDIO接收数据时,由数据通道但能源置位RXACT,表示数据传输正在进行.
当RXACT为1时,通过接收FIFO存放从数据通道接收到的数据
接收FIFO相关状态,RXFIFOF,RXFIFOE,RXFIFOHF,RXDAVL,RXOVERR.

这些标志位从哪里查?? SDIO_STA状态寄存器.

上溢和下溢是写SD卡驱动时经常会遇到的,在SDIO里也有一个功能辅助解决:硬件流控,如果开了,可以避免接收模式的上溢和发送模式的下溢.

4.命令格式.

命令是用于开始的一项操作.命令在CMD线上串行发送,属于半双工模式,命令和响应可以分别发送和接收.

5.h7中SDMMC外设更好的驱动emmc(这种卡经常出现在linux板子上).

SDMMC支持存储卡版本从SDIO的2.0到4.1,支持超高速1卡.

速度 8线模式高达208MB/s. 速度模式(SDRx/DDRx).
SDIO.8位模式,高达48MB/s.

传输速度更快了,取决于SDIO总线速度模式.SDR12,DDR50及其更快的模式的信号电平是1.8V,但是开发板电路受限.

所以最高速度就是HS总线模式的25MB/s.

有自己专门的DMA.