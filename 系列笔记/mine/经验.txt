1.不是所有芯片都支持上拉开漏的输入输出方式，比如DS1302。必须得强输出，浮空输入，需要寄存器配置切换IO口推挽输出和浮空输入模式。

2.BCD码，把一个十六进制的数当成十进制的数看

3.一定要警惕文件重名的问题!!!

4.库函数版本不同,可能会有细微差别.

5.和复用相关的在数据手册

6.weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)函数修改滴答计时器时基。HAL-Delay函数适应主频。

7.与等于操作合并，或等于操作合并。

8.使用寄存器位的宏定义

9.减速电机，减速比越大，转速越慢，扭力越大。单位是(kg*cm),比如 9kg *cm,在1cm处可以带动9kg的东西，在9cm处可以带动1kg的东西。

10.不要让电机堵转,会过热损毁.

11.PID闭环控制。

12.sscanf(),这个函数从给定的数组中解析内容
    sprintf()是写好的东西发送到一个数组里

13.正点原子那个串口接收程序会自动过滤\r\n
g_usart_rx_sta这个变量得手动清除,既清除了接收标志,也清零了接收缓冲区指针.但是缓冲区数据并没有清除.
可以看USMART那个port文件看看怎么对缓冲区进行处理,加'\0'.

14.这种写法可以保证每进16次,执行一次关键内容.

void func(void)
{
  static uint8_t send_num=16;
  if(send_num==16)
  {
      DMA2_Stream7->M0AR=(uint32_t)&ch; //源地址
      DMA2_Stream7->CR |=1;//启动DMA传输
      while(!(DMA2->HISR&0x8000000));//等待标志位为0
      DMA2->HIFCR|=1<<27;//清除标志位
  }
  send_num--;
  if(!send_num)
      send_num=16;
}

15.板子型号相同,板子的晶振可能不同,需要在hal_config文件中修改HSE晶振频率,也要修改初始化时钟的函数.

16.keil生成反汇编查问题.

17.自己写驱动要看手册,看现成代码.
比如写SPI驱动,看HAL库代码只关于设置寄存器的部分,看参考手册.

有些寄存器位不能并行设置，就比如这同在spi寄存器cr1的两个位，必须先设置en位，再设置cstart位.

18.注意有些寄存器只能并行设置.

比如cache dcisw寄存器和同他一个类型的寄存器,必须同时设置set和way.
还有做比较循环判断时,跟0比较,数据类型最好用有符号数据类型.

单片机冷启动检测问题.

19.在ex_flash执行时注意得先内存映射.
专门给他弄一个文件,在qspi里执行的代码.
注意内存映射了之后只能读不能写.

20.注意改某个变量数据类型的时候一定要注意更改其他与之相关变量的数据类型.

21.freeRTOS注意代码顺序问题,有些设计中断的部分要在任务里面初始化,至少那时任务得创建上.